<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.snake.system.model.Parameter">
    <resultMap type="com.snake.system.model.Parameter" id="parameterResultMap">
        <result property="id" column="id_"/>
        <result property="name" column="name_"/>
        <result property="code" column="code_"/>
        <result property="intValue" column="int_value"/>
        <result property="longValue" column="long_value"/>
        <result property="stringValue" column="string_value"/>
        <result property="doubleValue" column="double_value"/>
        <result property="booleanValue" column="boolean_value"/>
        <result property="charValue" column="char_value"/>
        <result property="remark" column="remark_"/>
        <result property="createdTime" column="created_time"/>
        <result property="creatorId" column="creator_id"/>
    </resultMap>

    <select id="selectAll" resultMap="parameterResultMap">
		select * from sys_parameter
	</select>

    <select id="selectSome" parameterType="java.util.Map" resultMap="parameterResultMap">
        select * from sys_parameter limit #{offset},#{limit}
    </select>

    <select id="getTotalCount" resultType="java.lang.Integer">
        select count(1) from sys_parameter
    </select>

    <select id="getObject" resultMap="parameterResultMap" parameterType="java.lang.Object">
        select * from sys_parameter where id_ = #{id}
    </select>

    <insert id="insert" parameterType="com.snake.system.model.Parameter">
        insert into sys_parameter(name_,code_,int_value,long_value,string_value,double_value,boolean_value,remark_,created_time,creator_id)
        values(#{name},#{code},#{intValue},#{longValue},#{stringValue},#{doubleValue},#{booleanValue},#{remark},now(),#{creatorId})
    </insert>

    <update id="update" parameterType="com.snake.system.model.Parameter">
        update sys_parameter
        <set>
            <if test="name != null">
                name_=#{name},
            </if>
            <if test="code != null">
                code_=#{code},
            </if>
            <if test="intValue != null">
                int_value=#{intValue},
            </if>
            <if test="longValue != null">
                long_value=#{longValue},
            </if>
            <if test="stringValue != null">
                string_value=#{stringValue},
            </if>
            <if test="doubleValue != null">
                double_value=#{doubleValue},
            </if>
            <if test="booleanValue != null">
                boolean_value=#{booleanValue},
            </if>
            <if test="remark != null">
                remark_=#{remark},
            </if>
        </set>
        where id_ = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Object">
        delete from sys_parameter where id_ = #{id}
    </delete>

    <select id="findOneByMap" resultMap="parameterResultMap">
        select * from sys_parameter where 1=1 AND
        <foreach item="param" index="key" collection="list" open="" separator="AND" close="">
            ${param.name} = #{param.value}
        </foreach>
        limit 0, 1
    </select>

    <select id="findOneByObject" parameterType="com.snake.system.model.Parameter" resultMap="parameterResultMap">
        select * from sys_parameter
        <where>
            <if test="id != null">
                and id_=#{id}
            </if>
            <if test="name != null">
                and name_=#{name}
            </if>
            <if test="code != null">
                and code_ = #{code}
            </if>
            <if test="intValue != null">
                and int_value=#{intValue}
            </if>
            <if test="longValue != null">
                and long_value= #{longValue}
            </if>
            <if test="stringValue != null">
                and string_value=#{stringValue}
            </if>
            <if test="doubleValue != null">
                and double_value=#{doubleValue}
            </if>
            <if test="booleanValue != null">
                and boolean_value=#{booleanValue}
            </if>
        </where>
        limit 0, 1
    </select>

    <select id="findByMap" resultMap="parameterResultMap">
        select * from sys_parameter where 1=1 AND
        <foreach item="param" index="key" collection="list" open="" separator="AND" close="">
            ${param.name} = #{param.value}
        </foreach>
    </select>

    <select id="findByObject" parameterType="com.snake.system.model.Parameter" resultMap="parameterResultMap">
        select * from sys_parameter
        <where>
            <if test="id != null">
                and id_=#{id}
            </if>
            <if test="name != null">
                and name_=#{name}
            </if>
            <if test="code != null">
                and code_=#{code}
            </if>
            <if test="intValue != null">
                and int_value=#{intValue}
            </if>
            <if test="longValue != null">
                and long_value= #{longValue}
            </if>
            <if test="stringValue != null">
                and string_value=#{stringValue}
            </if>
            <if test="doubleValue != null">
                and double_value=#{doubleValue}
            </if>
            <if test="booleanValue != null">
                and boolean_value=#{booleanValue}
            </if>
        </where>
    </select>

    <select id="findByIn" resultMap="parameterResultMap">
        select * from sys_parameter where 1=1 AND
        <foreach item="param" index="key" collection="list" open="" separator="AND" close="">
            ${param.name} IN (#{param.value})
        </foreach>
    </select>

    <select id="findByLike" resultMap="parameterResultMap">
        select * from sys_parameter where 1=1 AND
        <foreach item="param" index="key" collection="list" open="" separator="AND" close="">
            ${param.name} LIKE #{param.value}
        </foreach>
    </select>

    <select id="getCount" parameterType="java.util.Map" resultType="int">
        select count(1) from sys_parameter where 1=1
        <if test="whereClause != null">
            ${whereClause}
        </if>
    </select>

    <select id="query" parameterType="java.util.Map" resultMap="parameterResultMap">
        select ${fieldsClause} from sys_parameter where 1=1
        <if test="whereClause != null">
            ${whereClause}
        </if>
        <if test="orderClause != null">
            ${orderClause}
        </if>
        <if test="limit > 0">
            limit ${limit} offset ${offset}
        </if>
    </select>

</mapper>