<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.snake.inter.model.ModelParameter">
    <resultMap type="com.snake.inter.model.ModelParameter" id="modelParameterResultMap">
        <result property="id" column="id_"/>
        <result property="modelId" column="model_id"/>
        <result property="keyType" column="key_type"/>
        <result property="name" column="name_"/>
        <result property="code" column="code_"/>
        <result property="type" column="type_"/>
        <result property="isArray" column="is_array"/>
        <result property="length" column="length_"/>
        <result property="allowBlank" column="allow_blank"/>
        <result property="example" column="example_"/>
        <result property="regex" column="regex_"/>
        <result property="remark" column="remark_"/>
    </resultMap>

    <select id="selectAll" resultMap="modelParameterResultMap">
		select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter
	</select>

    <select id="selectSome" parameterType="java.util.Map" resultMap="modelParameterResultMap">
        select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter limit #{offset},#{limit}
    </select>

    <select id="getTotalCount" resultType="java.lang.Integer">
        select count(1) from inter_model_parameter
    </select>

    <select id="getObject" resultMap="modelParameterResultMap" parameterType="java.lang.Object">
        select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter where id_ = #{id}
    </select>

    <insert id="batchInsert" parameterType="com.snake.inter.model.ModelParameter">
        insert into inter_model_parameter(id_,model_id,key_type,name_,code_,type_,is_array,length_,allow_blank,regex_,example_,remark_)
        values
        <foreach collection="list" item="each" separator=",">
            (#{each.id},#{each.modelId},#{each.keyType},#{each.name},#{each.code},#{each.type},#{each.isArray},#{each.length},#{each.allowBlank},#{each.regex},#{each.example},#{each.remark})
        </foreach>
    </insert>

    <insert id="insert" parameterType="com.snake.inter.model.ModelParameter">
        insert into inter_model_parameter(id_,model_id,key_type,name_,code_,type_,is_array,length_,allow_blank,regex_,example_,remark_)
        values(#{id},#{modelId},#{keyType},#{name},#{code},#{type},#{isArray},#{length},#{allowBlank},#{regex},#{example},#{remark})
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            select last_insert_id() as id
        </selectKey>
    </insert>

    <update id="update" parameterType="com.snake.inter.model.ModelParameter">
        update inter_model_parameter
        <set>
            <if test="modelId != null">
                model_id=#{modelId},
            </if>
            <if test="keyType != null">
                key_type=#{keyType},
            </if>
            <if test="name != null">
                name_=#{name},
            </if>
            <if test="code != null">
                code_=#{code},
            </if>
            <if test="type != null">
                type_=#{type},
            </if>
            <if test="isArray != null">
                is_array=#{isArray},
            </if>
            <if test="allowBlank != null">
                allow_blank=#{allowBlank},
            </if>
            <if test="length != null">
                length_=#{length},
            </if>
            <if test="regex != null">
                regex_=#{regex},
            </if>
            <if test="example != null">
                example_=#{example},
            </if>
            <if test="remark != null">
                remark_=#{remark},
            </if>
        </set>
        where id_ = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Object">
        delete from inter_model_parameter where id_ = #{id}
    </delete>

    <select id="findOneByMap" resultMap="modelParameterResultMap">
        select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter where 1=1 AND
        <foreach item="param" index="key" collection="list"  open="" separator="AND" close="">
            ${param.name} = #{param.value}
        </foreach>
        limit 0, 1
    </select>

    <select id="findOneByObject" parameterType="com.snake.inter.model.ModelParameter" resultMap="modelParameterResultMap">
        select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter
        <where>
            <if test="modelId != null">
                and model_id=#{modelId}
            </if>
            <if test="keyType != null">
                and key_type=#{keyType}
            </if>
            <if test="name != null">
                and name_=#{name}
            </if>
            <if test="code != null">
                and code_=#{code}
            </if>
            <if test="type != null">
                and type_=#{type}
            </if>
            <if test="is_array != null">
                and is_array=#{isArray}
            </if>
            <if test="length != null">
                and length_=#{length}
            </if>
            <if test="regex != null">
                and regex_=#{regex}
            </if>
            <if test="allowBlank != null">
                and allow_blank=#{allowBlank}
            </if>
            <if test="remark != null">
                and remark_=#{remark}
            </if>
            <if test="example != null">
                and example_=#{example}
            </if>
        </where>
        limit 0, 1
    </select>

    <select id="findByMap" resultMap="modelParameterResultMap">
        select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter where 1=1 AND
        <foreach item="param" index="key" collection="list"  open="" separator="AND" close="">
            ${param.name} = #{param.value}
        </foreach>
    </select>

    <select id="findByObject" parameterType="com.snake.inter.model.ModelParameter" resultMap="modelParameterResultMap">
        select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter
        <where>
            <if test="modelId != null">
                and model_id=#{modelId}
            </if>
            <if test="keyType != null">
                and key_type=#{keyType}
            </if>
            <if test="name != null">
                and name_=#{name}
            </if>
            <if test="code != null">
                and code_=#{code}
            </if>
            <if test="type != null">
                and type_=#{type}
            </if>
            <if test="is_array != null">
                and is_array=#{isArray}
            </if>
            <if test="length != null">
                and length_=#{length}
            </if>
            <if test="regex != null">
                and regex_=#{regex}
            </if>
            <if test="allowBlank != null">
                and allow_blank=#{allowBlank}
            </if>
            <if test="remark != null">
                and remark_=#{remark}
            </if>
            <if test="example != null">
                and example_=#{example}
            </if>
        </where>
    </select>

    <select id="findByIn" resultMap="modelParameterResultMap">
        select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter where 1=1 AND
        <foreach item="param" index="key" collection="list"  open="" separator="AND" close="">
            ${param.name} IN (#{param.value})
        </foreach>
    </select>

    <select id="findByLike" resultMap="modelParameterResultMap">
        select id_,model_id,key_type,name_,code_,type_,is_array,allow_blank,length_,regex_,example_,remark_ from inter_model_parameter where 1=1 AND
        <foreach item="param" index="key" collection="list"  open="" separator="AND" close="">
            ${param.name} LIKE #{param.value}
        </foreach>
    </select>

    <select id="getCount" parameterType="java.util.Map" resultType="int">
        select count(1) from inter_model_parameter where 1=1
        <if test="whereClause != null">
            ${whereClause}
        </if>
    </select>

    <select id="query" parameterType="java.util.Map" resultMap="modelParameterResultMap">
        select ${fieldsClause} from inter_model_parameter where 1=1
        <if test="whereClause != null">
            ${whereClause}
        </if>
        <if test="orderClause != null">
            ${orderClause}
        </if>
        <if test="limit > 0">
            limit ${limit} offset ${offset}
        </if>
    </select>

</mapper>